precision highp float;
using namespace std;

vec4 main(Texture2d tex, vec2 touch, float isTouchDown, float brushSize, float reset, Texture2d lastTouchTex) {
  vec2 uv = fragment(std::getVertexTexCoord());

  vec4 color = tex.sample(uv);

  // Sample last touch from the texture
  vec2 lt = lastTouchTex.sample(vec2(0.5)).xy;

  // diff of touches
  vec2 d = touch - lt;

  // Displacement vector is diff of touches * a small circle
  vec2 v = d * smoothstep(brushSize, 0.0, length(uv - touch));

  // If we're touching, displace the texture
  if(isTouchDown > 0.0 && lt.x > 0.0 && lt.y > 0.0 && abs(d.x + d.y) < 0.1){
    color = tex.sample(uv - 0.5 * v);
  }

  // Init displacement field
  if( reset < 1.0){
    color = mix(uv.xy01, color, reset);
  }

  return color;
}